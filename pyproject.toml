[pycodestyle]
max-line-length = 120

[tool.black]
target-version = ['py37']
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
  \.git
  | build
  | dist
 )/
'''

[tool.isort]
profile = "black"
line_length = 120
default_section = "THIRDPARTY"
known_first_party = "django_postgres_backup"
skip_glob = "venv"

[tool.poetry]
name = "django_postgres_backup"
version = "0.1.0"
description = "TODO"
authors = ["ITELL.SOLUTIONS GmbH"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/itell-solutions/django_postgres_backup"
repository = "https://github.com/itell-solutions/django_postgres_backup"
keywords = ["backup", "django", "postgres", "restore", "sass",]
classifiers = [
        "Development Status :: 5 - Production/Stable",
        "Environment :: Web Environment",
        "Framework :: Django",
        "Framework :: Django :: 3",
        "Framework :: Django :: 4",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: MIT License",
        "Natural Language :: English",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Topic :: Internet :: WWW/HTTP",
        "Topic :: Software Development",
        "Topic :: Text Processing :: Markup :: HTML",
]
packages = [
    { include = "django_postgres_backup" },
]

[tool.poetry.dependencies]
python = ">=3.8, <4"
Django = "^4.1"
django-extensions = "^3.1.5"
psycopg2-binary = "^2.9.3"
requests = "^2.27.1"
django-libsass= "^0.9"



[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
docker-compose = "^1.29.2"
pytest-django = "^4.5.2"
pytest-cov = "^3.0.0"
pytest-xdist = "^2.5.0"
pytest-order = "^1.0.1"

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/itell-solutions/django_postgres_backup/issues"
"Changes" = "https://github.com/itell-solutions/django_postgres_backup/blob/main/CHANGES.md"

[tool.pytest.ini_options]
addopts = """\
    --strict-config
    --strict-markers
    """
django_find_project = false
DJANGO_SETTINGS_MODULE = "tests.settings"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
